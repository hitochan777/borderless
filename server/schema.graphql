### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AuthData {
  token: String!
}

scalar Date

type Language {
  id: LanguageCode!
  name: String!
}

scalar LanguageCode

type Line implements Node {
  """Unique identifier for the resource"""
  id: ID!
  partialLines: [PartialLine!]!
  replies: [Tweet!]!
}

input LineInput {
  id: ID
  partialLines: [PartialLineInput!]!
}

type Mutation {
  logout: Boolean!
  postCreate(post: PostInput!): Post!
  postLike(id: ID!): Post!
  postUpdate(id: ID!, post: PostInput!): Post!
  signin(token: String!): AuthData!
  tweetCreate(tweet: TweetInput!): Tweet!
  tweetLike(id: ID!): Tweet!
  userCreate(id: ID!): User!
  userUpdate(user: UserInput!): User!
}

interface Node {
  """Unique identifier for the resource"""
  id: ID!
}

type PartialLine {
  text: String!
}

input PartialLineInput {
  referes: [String!]
  subtext: String!
}

type Post implements Node {
  createdAt: Date

  """Unique identifier for the resource"""
  id: ID!
  isDraft: Boolean!
  json: String!
  language: Language!
  likeCount: Int!
  likedByMe: Boolean!
  lines: [Line!]!
  replies: [Tweet!]!
  title: String!
  updatedAt: Date
  user: User!
}

input PostInput {
  isDraft: Boolean! = true
  language: String!
  lines: [LineInput!]!
}

type Query {
  feed(limit: Int! = 20, offset: Int! = 0): [Post!]!
  langs(relatedOnly: Boolean = false): [Language!]!
  post(id: ID!): Post!
  posts: [Post!]!
  replies(
    """repliable ID"""
    id: ID!
  ): [Tweet!]!
  search(query: SearchInput!): [Post!]!
  tweet(
    """tweet id"""
    id: ID!
  ): Tweet!
  user(username: String!): User!
  viewer: User!
}

"""Anything that can be replied"""
union Repliable = Line | Tweet

input SearchInput {
  language: String
}

type Tweet implements Node {
  createdAt: Date

  """Unique identifier for the resource"""
  id: ID!
  inReplyTo: Int
  likeCount: Int!
  likedByMe: Boolean!
  post: Post!
  postedBy: User!
  replies: [Tweet!]!
  text: String!
  updatedAt: Date
}

input TweetInput {
  inReplyTo: ID!
  postId: ID!
  text: String!
}

type User implements Node {
  createdAt: Date
  email: String!
  fluentLanguages: [Language!]!

  """Unique identifier for the resource"""
  id: ID!
  learningLanguages: [Language!]!
  posts: [Post!]!
  updatedAt: Date
  username: String!
}

input UserInput {
  email: String!
  fluentLanguages: [String!]!
  learningLanguages: [String!]!
  username: String!
}
